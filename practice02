/**
 *ktNexR 사이트의 검색기능 Test
 *검색 단어가 각각의 검색된 리스트에 있는지 검사
 *사용된 API - selenium
 */

package com.example;

import java.util.ArrayList;
import java.util.concurrent.TimeUnit;

import org.openqa.selenium.By;
import org.openqa.selenium.NoSuchElementException;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.testng.Assert;
import org.testng.annotations.AfterClass;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.Test;

public class Example5 {
	//WebDriver 선언
	public static WebDriver driver;
	public static ArrayList<String> searchWordList = new ArrayList<String>(3);
	
	//xpath사용을 위한 ktNexR 사이트의 5개 카테고리 경로 지정
	public static String pathOfProduct = "//tbody/*[@class='product']";
	public static String pathOf3V = "//tbody/*[@class='3V']";
	public static String pathOfResources = "//tbody/*[@class='resources']";
	public static String pathOfAbout = "//tbody/*[@class='about']";
	public static String pathOfContact = "//tbody/*[@class='contact']";
	
	//driver 설정 메소드
	@BeforeClass
	public static void setUp() throws Exception {
		//System Property에 ChromeDriver를 set
		System.setProperty("webdriver.chrome.driver", "C:\\Users\\disti\\selenium\\chromedriver.exe");
		driver = new ChromeDriver();
		//암시적 대기
		driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
		driver.get("https://www.ktnexr.com/");
	}
	
	//검색할 단어 저장
	@BeforeClass
	public void initArrayList() {
		searchWordList.add("빅데이터");
		searchWordList.add("채용");
		searchWordList.add("Hadoop");
	}
	
	//테스트 대상 메소드
	@Test
	public void testSearch() throws Exception {
		
		//검색할 단어 개수만큼 반복
		for(int i=0; i<searchWordList.size(); i++) {
			
			//WebElement를 통해 HTML요소를 Java내에 객체화함
			WebElement searchBar = driver.findElement(By.id("topSearchWord"));
			WebElement btn = driver.findElement(By.className("saBtn"));
			
			//sendKeys 메소드를 통해 검색단어를 입력하고 클릭함
			searchBar.sendKeys(searchWordList.get(i));
			btn.click();
			
			//Page 전환됨
			//checkEquals 메소드를 통해 검색된 콘텐츠에 검색단어가 포함되어 있는지 검사함
			checkEquals(pathOfProduct, i);
			checkEquals(pathOf3V, i);
			checkEquals(pathOfResources, i);
			checkEquals(pathOfAbout, i);
			checkEquals(pathOfContact, i);
		}
	}
	
	//실제값과 예측값이 같은지 검사하는 메소드
	public void checkEquals(String path, int i) {
		
		//idx: 검색내용 리스트 number
		for(int idx=1;;idx++) {
			//try-catch
			try {
				
				//검색 내용 일부를 content에 저장
				WebElement content = driver.findElement(By.xpath(path + "//dl["+idx+"]"));
				
				//searchWord 메소드를 통해 content에서 단어 검색
				String testWord = searchWord(searchWordList.get(i), content.getText());
				
				//assertEquals 단정문을 통해 실제값과 예측값이 같은지 확인 
				Assert.assertEquals(searchWordList.get(i), testWord);
				System.out.println("Expected value equals Actual value");
				
			//NoSuchElementException이 발생하면 for문 break	
			} catch(NoSuchElementException e) {
				System.out.println("Handled NoSuchElementException");
				break;
			}
		}	
	}
	
	//content에서 실제값을 추출하는 메소드
	public String searchWord(String word, String content) {
		int sizeOfWord = word.length();
		int sizeOfCont = content.length();
		
		for(int i=0; i<sizeOfCont-sizeOfWord; i++) {
			String temp = content.substring(i, i+sizeOfWord);
			if(word.equals(temp)) {
				return temp;
			}
			else {
				continue;
			}
		}
		return "";
	}
	
	//AfterClass
	@AfterClass
	public void tearDown() throws Exception {
		driver.close();
	}
}
